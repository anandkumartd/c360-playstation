{"ast":null,"code":"var record = require('./record');\n\nvar _ = require('./utils/lodash');\n\nvar configurator = require('./configurator');\n\nvar version = require('./version');\n\nvar cookie = require('./vendor/js-cookies');\n\nvar config = require('./config');\n\nfunction Treasure(options) {\n  // enforces new\n  if (!(this instanceof Treasure)) {\n    return new Treasure(options);\n  }\n\n  this.init(options);\n  return this;\n}\n/**\n * Treasure#init\n */\n\n\nTreasure.prototype.init = function (options) {\n  this.configure(options);\n\n  for (var plugin in Treasure.Plugins) {\n    if (Treasure.Plugins.hasOwnProperty(plugin)) {\n      Treasure.Plugins[plugin].configure.call(this, options);\n    }\n  }\n};\n/**\n * Treasure#version\n */\n\n\nTreasure.version = Treasure.prototype.version = version;\n/**\n * Treasure#log\n */\n\nTreasure.prototype.log = function () {\n  var args = ['[' + config.GLOBAL + ']'];\n\n  for (var i = 0, len = arguments.length - 1; i <= len; i++) {\n    args.push(arguments[i]);\n  }\n\n  if (typeof console !== 'undefined' && this.client.logging) {\n    console.log.apply(console, args);\n  }\n};\n/**\n * Treasure#configure\n */\n\n\nTreasure.prototype.configure = configurator.configure;\n/**\n * Treasure#set\n */\n\nTreasure.prototype.set = configurator.set;\n/**\n * Treasure#get\n */\n\nTreasure.prototype.get = configurator.get;\n/**\n * Treasure#ready\n */\n\nTreasure.prototype.ready = require('domready');\n/**\n * Treasure#applyProperties\n * Treasure#addRecord\n * Treasure#_sendRecord\n * Treasure#blockEvents\n * Treasure#unblockEvents\n * Treasure#areEventsBlocked\n * Treasure#setSignedMode\n * Treasure#setAnonymousMode\n * Treasure#inSignedMode\n */\n\nTreasure.prototype.applyProperties = record.applyProperties;\nTreasure.prototype.addRecord = record.addRecord;\nTreasure.prototype._sendRecord = record._sendRecord;\nTreasure.prototype.blockEvents = record.blockEvents;\nTreasure.prototype.unblockEvents = record.unblockEvents;\nTreasure.prototype.areEventsBlocked = record.areEventsBlocked;\nTreasure.prototype.setSignedMode = record.setSignedMode;\nTreasure.prototype.setAnonymousMode = record.setAnonymousMode;\nTreasure.prototype.inSignedMode = record.inSignedMode;\n/**\n * Treasure#getCookie\n */\n\nTreasure.prototype.getCookie = cookie.getItem;\n/**\n * Treasure#_configurator\n */\n\nTreasure.prototype._configurator = configurator;\n/**\n * Plugins\n */\n\nTreasure.Plugins = {\n  Clicks: require('./plugins/clicks'),\n  GlobalID: require('./plugins/globalid'),\n  Personalization: require('./plugins/personalization'),\n  Track: require('./plugins/track') // Load all plugins\n\n};\n\n_.forIn(Treasure.Plugins, function (plugin) {\n  _.forIn(plugin, function (method, name) {\n    if (!Treasure.prototype[name]) {\n      Treasure.prototype[name] = method;\n    }\n  });\n});\n\nmodule.exports = Treasure;","map":null,"metadata":{},"sourceType":"script"}