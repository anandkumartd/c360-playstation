{"ast":null,"code":"var _jsxFileName = \"/Users/anandkumar/Documents/github/c360-playstation/src/Components/ProfileDialog/Sources/SourcesCard.js\";\nimport React, { Component } from \"react\";\nimport \"./SourcesCard.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PieChart from 'react-minimal-pie-chart';\nimport randomColor from \"randomcolor\";\n\nclass SourcesCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const attributes = this.props.attributes;\n    const profile = this.props.profile;\n    const sources = profile[\"game_channel\"] == null ? \"\" : profile[\"game_channel\"];\n    var return_channel = [];\n\n    for (let i = 0; i < sources.length; i++) {\n      var source = sources[i];\n      return_channel.push(source);\n    }\n\n    var total = 0;\n    total = return_channel.length;\n    var percentage = 0;\n    var results = [];\n    var count = 0;\n    var labels = [];\n    var pairs;\n    let occurrences = [];\n    occurrences = return_channel.reduce(function (obj, item) {\n      obj[item] = (obj[item] || 0) + 1 / total * 100;\n      return obj;\n    }, {});\n    pairs = JSON.stringify(occurrences);\n    labels = Object.keys(occurrences).map(function (key) {\n      return [key];\n    });\n    results = Object.keys(occurrences).map(function (key) {\n      return occurrences[key];\n    });\n    var preferences2 = Object.keys(occurrences).map(function (key) {\n      var color = randomColor({\n        luminosity: 'light'\n      });\n      var pref = {};\n      pref[\"title\"] = [key];\n      pref[\"value\"] = occurrences[key];\n      pref[\"color\"] = color;\n      return pref;\n    });\n    var list = [];\n\n    for (let k = 0; k < preferences2.length; k++) {\n      var pref = preferences2[k];\n      var percentage = pref[\"value\"].toFixed(2);\n      list.push(React.createElement(\"li\", {\n        className: \"legend\",\n        style: {\n          \"background-color\": pref.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, pref.title, React.createElement(\"span\", {\n        className: \"percentage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, percentage, \"%\")));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"div-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"innercontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Channel Preferences\"), React.createElement(\"table\", {\n      className: \"gameTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"piechart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", React.createElement(PieChart, {\n      data: preferences2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Source / Percentage \")), list)))))));\n  }\n\n}\n\nSourcesCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(mapStateToProps, null)(SourcesCard);","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/c360-playstation/src/Components/ProfileDialog/Sources/SourcesCard.js"],"names":["React","Component","Typography","connect","PropTypes","PieChart","randomColor","SourcesCard","state","render","attributes","props","profile","sources","return_channel","i","length","source","push","total","percentage","results","count","labels","pairs","occurrences","reduce","obj","item","JSON","stringify","Object","keys","map","key","preferences2","color","luminosity","pref","list","k","toFixed","title","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SourcesCard.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PieChart from 'react-minimal-pie-chart';\nimport randomColor from \"randomcolor\";\nclass SourcesCard extends Component {\n  state = {};\n  render() {\n    const attributes = this.props.attributes;\n    const profile = this.props.profile;\n    const sources = profile[\"game_channel\"] == null ? \"\" :profile[\"game_channel\"];\n  \n    var return_channel = [];\n\n    for (let i = 0; i < sources.length; i++) {\n      var source = sources[i];\n      return_channel.push(\n       source     \n      );\n    }\n\n\nvar total = 0;\ntotal = return_channel.length;\n\nvar percentage=0;\nvar results =[];\nvar count=0;\nvar labels = [];\nvar pairs;\nlet occurrences =[];\noccurrences = return_channel.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1/total*100;\n return obj;\n}, {});\n\n\n pairs = JSON.stringify(occurrences);\n\n labels = Object.keys(occurrences).map(function(key) {\n  return [key];\n});\nresults = Object.keys(occurrences).map(function(key) {\n  return occurrences[key];\n});\n\nvar preferences2 = Object.keys(occurrences).map(function(key) {\n  var color = randomColor({luminosity: 'light'});\n  var pref = {};\n  pref[\"title\"] = [key];\n  pref[\"value\"] = occurrences[key];\n  pref[\"color\"] = color;\n  return pref;\n  })\n\n\n    \n \n      var list=[];\n     \n      for (let k=0; k< preferences2.length; k++){\n       var pref= preferences2[k];\n       var percentage = pref[\"value\"].toFixed(2);\n      list.push(<li className={\"legend\"} style={{\"background-color\":pref.color}}>{pref.title}<span className={\"percentage\"}>{percentage}%</span></li>);\n      } \n     \n       \n     \n      \n      \n      \n \n    return (\n      <div className={\"div-body\"}>\n         <div className=\"innercontainer\">\n       <Typography gutterBottom>Channel Preferences</Typography>\n       <table className={\"gameTable\"}>\n         <tbody>\n           <tr><td className={\"piechart\"}> <PieChart data={preferences2} /></td>\n           <td>\n             <ul>\n               <li className={\"subtitle\"}><span>Source / Percentage </span></li>\n               {list}\n           </ul></td></tr>\n         </tbody>\n       </table>\n       \n         </div>\n      </div>\n    );\n  }\n}\nSourcesCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(\n  mapStateToProps,\n null \n)(SourcesCard);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}