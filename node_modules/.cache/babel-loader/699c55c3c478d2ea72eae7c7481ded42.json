{"ast":null,"code":"import { FETCH_PROFILES_BEGIN, FETCH_PROFILES_SUCCESS, FETCH_PROFILES_FAILURE } from \"./types\";\nimport Parser from \"../utils/parsers/Parser\";\nimport axios from \"axios\";\nexport const fetchProfiles = () => dispatch => {\n  dispatch({\n    type: FETCH_PROFILES_BEGIN\n  });\n  var parser = new Parser(); //axios.defaults.proxy.host = \"https://cors-anywhere.herokuapp.com/\";\n\n  axios.defaults.baseURL = \"https://api-staging-cdp.treasuredata.com\";\n  axios.defaults.headers.common[\"Authorization\"] = \"TD1 1199/2fcd68b917650f65455abe67f452fe753ea5b32b\";\n  axios.defaults.headers.common[\"content-type\"] = \"application/json;charset=utf-8\";\n  axios.get(\"/audiences/137520/customers/\").then(response => {\n    dispatch({\n      type: FETCH_PROFILES_SUCCESS,\n      payload: parser.makeDictFromArrays(response.data.names, response.data.rows)\n    }); //console.log(\"profaction: \" + response.data);\n  }).catch(error => dispatch({\n    type: FETCH_PROFILES_FAILURE,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/td-solution-engineering/c360-PlayStation/src/actions/profilesActions.js"],"names":["FETCH_PROFILES_BEGIN","FETCH_PROFILES_SUCCESS","FETCH_PROFILES_FAILURE","Parser","axios","fetchProfiles","dispatch","type","parser","defaults","baseURL","headers","common","get","then","response","payload","makeDictFromArrays","data","names","rows","catch","error"],"mappings":"AAAA,SACEA,oBADF,EAEEC,sBAFF,EAGEC,sBAHF,QAIO,SAJP;AAKA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAMC,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP;AADC,GAAD,CAAR;AAIA,MAAIQ,MAAM,GAAG,IAAIL,MAAJ,EAAb,CAL6C,CAM7C;;AACAC,EAAAA,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB,0CAAzB;AACFN,EAAAA,KAAK,CAACK,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IACA,mDADA;AAEAR,EAAAA,KAAK,CAACK,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgD,gCAAhD;AAEER,EAAAA,KAAK,CAACS,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CACEC,QAAQ,IACR;AACET,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,sBADC;AAEPe,MAAAA,OAAO,EAAER,MAAM,CAACS,kBAAP,CACPF,QAAQ,CAACG,IAAT,CAAcC,KADP,EAEPJ,QAAQ,CAACG,IAAT,CAAcE,IAFP;AAFF,KAAD,CAAR,CADF,CAQE;AACD,GAXH,EAaIC,KAbJ,CAaUC,KAAK,IACXhB,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL,sBADC;AAEPc,IAAAA,OAAO,EAAEM;AAFF,GAAD,CAdZ;AAmBD,CA/BM","sourcesContent":["import {\n  FETCH_PROFILES_BEGIN,\n  FETCH_PROFILES_SUCCESS,\n  FETCH_PROFILES_FAILURE\n} from \"./types\";\nimport Parser from \"../utils/parsers/Parser\";\nimport axios from \"axios\";\n\nexport const fetchProfiles = () => dispatch => {\n  dispatch({\n    type: FETCH_PROFILES_BEGIN\n  });\n\n  var parser = new Parser();\n  //axios.defaults.proxy.host = \"https://cors-anywhere.herokuapp.com/\";\n  axios.defaults.baseURL = \"https://api-staging-cdp.treasuredata.com\"; \naxios.defaults.headers.common[\"Authorization\"] =\n\"TD1 1199/2fcd68b917650f65455abe67f452fe753ea5b32b\";\naxios.defaults.headers.common[\"content-type\"] = \"application/json;charset=utf-8\";\n\n  axios.get(\"/audiences/137520/customers/\").then(\n    response =>\n    {\n      dispatch({\n        type: FETCH_PROFILES_SUCCESS,\n        payload: parser.makeDictFromArrays(\n          response.data.names,\n          response.data.rows\n        )\n      })\n      //console.log(\"profaction: \" + response.data);\n    }\n   )\n     .catch(error =>\n      dispatch({\n        type: FETCH_PROFILES_FAILURE,\n        payload: error\n      })\n  );\n};\n"]},"metadata":{},"sourceType":"module"}