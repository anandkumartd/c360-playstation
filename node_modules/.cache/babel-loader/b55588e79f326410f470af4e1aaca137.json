{"ast":null,"code":"var _jsxFileName = \"/Users/anandkumar/Documents/github/c360-playstation/src/App.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport \"./Components/ProfileList\";\nimport ProfileList from \"./Components/ProfileList\";\nimport { connect } from \"react-redux\";\nimport { fetchProfiles } from \"./actions/profilesActions\";\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.updateProfile = this.updateProfile.bind(this);\n  // }\n  // updateProfile() {\n  //   this.props.updateProfile();\n  // }\n  componentWillMount() {\n    this.props.fetchProfiles();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(ProfileList, {\n      profiles: this.props.profiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nApp.propTypes = {\n  fetchProfiles: PropTypes.func.isRequired,\n  profiles: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profiles: state.profiles.items\n});\n\nconst mapActionsToProps = {\n  fetchProfiles: fetchProfiles\n};\nexport default connect(mapStateToProps, mapActionsToProps // { fetchProfiles }\n)(App);","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/c360-playstation/src/App.js"],"names":["React","Component","PropTypes","ProfileList","connect","fetchProfiles","App","componentWillMount","props","render","profiles","propTypes","func","isRequired","array","mapStateToProps","state","items","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,WAAP;AACA,OAAO,0BAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEAM,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWH,aAAX;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnByB;;AAsB5BJ,GAAG,CAACK,SAAJ,GAAgB;AACdN,EAAAA,aAAa,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADhB;AAEdH,EAAAA,QAAQ,EAAER,SAAS,CAACY,KAAV,CAAgBD;AAFZ,CAAhB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,QAAQ,EAAEM,KAAK,CAACN,QAAN,CAAeO;AADO,CAAL,CAA7B;;AAIA,MAAMC,iBAAiB,GAAG;AACxBb,EAAAA,aAAa,EAAEA;AADS,CAA1B;AAIA,eAAeD,OAAO,CACpBW,eADoB,EAEpBG,iBAFoB,CAGpB;AAHoB,CAAP,CAIbZ,GAJa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport \"./Components/ProfileList\";\nimport ProfileList from \"./Components/ProfileList\";\nimport { connect } from \"react-redux\";\nimport { fetchProfiles } from \"./actions/profilesActions\";\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.updateProfile = this.updateProfile.bind(this);\n  // }\n  // updateProfile() {\n  //   this.props.updateProfile();\n  // }\n\n  componentWillMount() {\n    this.props.fetchProfiles();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ProfileList profiles={this.props.profiles} />\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  fetchProfiles: PropTypes.func.isRequired,\n  profiles: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profiles: state.profiles.items\n});\n\nconst mapActionsToProps = {\n  fetchProfiles: fetchProfiles\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n  // { fetchProfiles }\n)(App);\n"]},"metadata":{},"sourceType":"module"}