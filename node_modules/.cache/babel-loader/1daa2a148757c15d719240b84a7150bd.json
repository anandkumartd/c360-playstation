{"ast":null,"code":"var _jsxFileName = \"/Users/anandkumar/Documents/github/c360-playstation/src/Components/ProfileDialog/Sanky/SankyCard.js\";\nimport React, { Component } from \"react\";\nimport \"./SankyCard.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PieChart from 'react-minimal-pie-chart';\nimport randomColor from \"randomcolor\";\nimport ReactSankey from 'react-sankey';\n\nconst createNode = (title, value, id) => ({\n  title,\n  value,\n  id\n});\n\nconst createLink = (sourceId, targetId) => ({\n  sourceId,\n  targetId\n});\n\nconst chartConfig = {\n  padding: {\n    top: 10,\n    right: 0,\n    bottom: 10,\n    left: 0\n  },\n  node: {\n    width: 150,\n    maxHeight: 150,\n    minHeight: 55,\n    rectMinHeight: 5,\n    paddingBottom: 40\n  },\n  link: {\n    width: 100\n  }\n};\nconst nodes = {\n  '0': createNode('Email', '', 0),\n  '1': createNode('Facebook', '', 1),\n  '2': createNode('PS Store', '', 2),\n  '3': createNode('Twitter', '', 3),\n  '4': createNode('Battle Royal', '', 4),\n  '5': createNode('Web page', '', 5),\n  '6': createNode('Sports', '', 6),\n  '7': createNode('Printed Ads', '', 7),\n  '8': createNode('Accessories', '', 8),\n  '9': createNode('PS Plus', '', 9),\n  '10': createNode('Black Friday', '', 10),\n  '11': createNode('DLC', '', 11),\n  '12': createNode('GameStop', '', 12),\n  '13': createNode('PS4', '', 13),\n  '14': createNode('Controllers', '', 14),\n  '15': createNode('RPG', '', 15),\n  '16': createNode('Instagram', '', 16),\n  '17': createNode('FPS', '', 17),\n  '18': createNode('Platform', '', 18),\n  '19': createNode('Strategy', '', 19),\n  '20': createNode('Advantures', '', 20)\n};\nconst links = [createLink(0, 1), createLink(1, 2), createLink(3, 5), createLink(4, 7), createLink(0, 3), createLink(4, 2), createLink(0, 16), createLink(3, 4), createLink(3, 19), createLink(16, 18), createLink(16, 19), createLink(16, 20), createLink(5, 2), createLink(7, 12), createLink(7, 11), createLink(5, 11), createLink(4, 11), createLink(12, 13), createLink(12, 14), createLink(13, 15)];\n\nclass SankyCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const attributes = this.props.attributes;\n    const profile = this.props.profile;\n    return React.createElement(\"div\", {\n      className: \"div-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"innercontainer sankydiagram\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(ReactSankey, {\n      rootID: 0,\n      nodes: nodes,\n      links: links,\n      hasArrows: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\nSankyCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(mapStateToProps, null)(SankyCard);","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/c360-playstation/src/Components/ProfileDialog/Sanky/SankyCard.js"],"names":["React","Component","Typography","connect","PropTypes","PieChart","randomColor","ReactSankey","createNode","title","value","id","createLink","sourceId","targetId","chartConfig","padding","top","right","bottom","left","node","width","maxHeight","minHeight","rectMinHeight","paddingBottom","link","nodes","links","SankyCard","state","render","attributes","props","profile","propTypes","object","isRequired","mapStateToProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SankyCard.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PieChart from 'react-minimal-pie-chart';\nimport randomColor from \"randomcolor\";\nimport ReactSankey from 'react-sankey';\n\nconst createNode = (title, value, id) => ({ title, value, id });\nconst createLink = (sourceId, targetId) => ({ sourceId, targetId });\nconst chartConfig = {\n  padding: { top: 10, right: 0, bottom: 10, left: 0 },\n  node: {\n    width: 150,\n    maxHeight: 150,\n    minHeight: 55,\n    rectMinHeight: 5,\n    paddingBottom: 40\n  },\n  link: {\n    width: 100\n  }\n}\nconst nodes = {\n  '0':  createNode('Email', '', 0),\n  '1':  createNode('Facebook', '', 1),\n  '2':  createNode('PS Store', '', 2),\n  '3':  createNode('Twitter', '', 3),\n  '4':  createNode('Battle Royal', '', 4),\n  '5':  createNode('Web page', '', 5),\n  '6':  createNode('Sports', '', 6),\n  '7':  createNode('Printed Ads', '', 7),\n  '8':  createNode('Accessories', '', 8),\n  '9':  createNode('PS Plus', '', 9),\n  '10': createNode('Black Friday', '', 10),\n  '11': createNode('DLC', '', 11),\n  '12': createNode('GameStop', '', 12),\n  '13': createNode('PS4', '', 13),\n  '14': createNode('Controllers', '', 14),\n  '15': createNode('RPG', '', 15),\n  '16': createNode('Instagram', '', 16),\n  '17': createNode('FPS', '', 17),\n  '18': createNode('Platform', '', 18),\n  '19': createNode('Strategy', '', 19),\n  '20': createNode('Advantures', '', 20),\n};\n    \nconst links = [\n  createLink(0, 1),\n  createLink(1, 2),\n  createLink(3, 5),\n  createLink(4, 7),\n  createLink(0, 3),\n  createLink(4, 2),\n  createLink(0, 16),\n  createLink(3, 4),\n  createLink(3, 19),\n  createLink(16, 18),\n  createLink(16, 19),\n  createLink(16, 20),\n  createLink(5, 2),\n  createLink(7, 12),\n  createLink(7, 11),\n  createLink(5, 11),\n  createLink(4, 11),\n  createLink(12, 13),\n  createLink(12, 14),\n  createLink(13, 15)\n];\n\n\n\nclass SankyCard extends Component {\n  state = {};\n  \n  render() {\n    const attributes = this.props.attributes;\n    const profile = this.props.profile; \n    return (\n      <div className={\"div-body\"}>\n         <div className=\"innercontainer sankydiagram\" >\n       <Typography gutterBottom></Typography>\n       <ReactSankey \n          rootID={0}\n          nodes={nodes}\n          links={links}\n          hasArrows\n        />\n       \n         </div>\n      </div>\n    );\n  }\n}\nSankyCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(\n  mapStateToProps,\n null \n)(SankyCard);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}