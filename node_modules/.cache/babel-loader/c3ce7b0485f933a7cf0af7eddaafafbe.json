{"ast":null,"code":"// Originally from https://github.com/keen/keen-js/blob/master/src/core/utils/base64.js\nvar cc = String.fromCharCode;\n/** @const {string} */\n\nvar m = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n/**\n * base64 encode a string\n * @param {string} n\n * @return {string}\n */\n\nfunction encode(n) {\n  var o = '';\n  var i = 0;\n  var i1, i2, i3, e1, e2, e3, e4;\n  n = utf8Encode(n);\n\n  while (i < n.length) {\n    i1 = n.charCodeAt(i++);\n    i2 = n.charCodeAt(i++);\n    i3 = n.charCodeAt(i++);\n    e1 = i1 >> 2;\n    e2 = (i1 & 3) << 4 | i2 >> 4;\n    e3 = isNaN(i2) ? 64 : (i2 & 15) << 2 | i3 >> 6;\n    e4 = isNaN(i2) || isNaN(i3) ? 64 : i3 & 63;\n    o = o + m.charAt(e1) + m.charAt(e2) + m.charAt(e3) + m.charAt(e4);\n  }\n\n  return o;\n}\n/**\n * @param {string} n\n * @return {string}\n */\n\n\nfunction utf8Encode(n) {\n  var o = '';\n  var i = 0;\n  var c;\n\n  while (i < n.length) {\n    c = n.charCodeAt(i++);\n    o = o + (c < 128 ? cc(c) : c > 127 && c < 2048 ? cc(c >> 6 | 192) + cc(c & 63 | 128) : cc(c >> 12 | 224) + cc(c >> 6 & 63 | 128) + cc(c & 63 | 128));\n  }\n\n  return o;\n}\n\nmodule.exports = encode;","map":null,"metadata":{},"sourceType":"script"}