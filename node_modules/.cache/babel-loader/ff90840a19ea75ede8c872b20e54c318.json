{"ast":null,"code":"var _jsxFileName = \"/Users/anandkumar/Documents/github/td-solution-engineering/c360-PlayStation/src/Components/ProfileDialog/Preferences/PreferencesCard.js\";\nimport React, { Component } from \"react\";\nimport \"./PreferencesCard.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PieChart from 'react-minimal-pie-chart';\nimport randomColor from \"randomcolor\";\n\nclass PreferencesCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const attributes = this.props.attributes;\n    const games = attributes[\"game_choice\"] == null ? \"\" : attributes[\"game_choice\"];\n    const plays = attributes[\"game_minutes\"] == null ? \"\" : attributes[\"game_minutes\"];\n    console.log(games, plays);\n    var return_game = [];\n    var return_time = [];\n    var return_min = [];\n\n    for (let i = 0; i < games.length; i++) {\n      var game = games[i];\n      return_game.push(React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, game));\n    }\n\n    var sum = 0;\n\n    for (let j = 0; j < games.length; j++) {\n      sum += plays[j];\n    }\n\n    var play;\n\n    for (let j = 0; j < games.length; j++) {\n      var play = plays[j];\n      var percent = play / sum * 100;\n      return_time.push(percent);\n      return_min.push(play);\n    }\n\n    var preferences2 = return_game.map(function (name, index) {\n      var color = randomColor({\n        luminosity: 'light'\n      });\n      var pref = {};\n      pref[\"title\"] = name;\n      pref[\"value\"] = return_time[index];\n      pref[\"color\"] = color;\n      pref[\"time\"] = return_min[index];\n      return pref;\n    });\n    var list = [];\n\n    for (let i = 0; i < preferences2.length; i++) {\n      var pref = preferences2[i];\n      var percentage = pref[\"time\"];\n      list.push(React.createElement(\"li\", {\n        className: \"legend\",\n        style: {\n          \"background-color\": pref.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, pref.title, React.createElement(\"span\", {\n        className: \"percentage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, percentage)));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"div-body-prefrences\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Game Preferences\"), React.createElement(\"table\", {\n      className: \"gameTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"piechart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(PieChart, {\n      data: preferences2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Game Choice / Game Minutes \")), list))))));\n  }\n\n}\n\nPreferencesCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(mapStateToProps, null)(PreferencesCard);","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/td-solution-engineering/c360-PlayStation/src/Components/ProfileDialog/Preferences/PreferencesCard.js"],"names":["React","Component","Typography","connect","PropTypes","PieChart","randomColor","PreferencesCard","state","render","attributes","props","games","plays","console","log","return_game","return_time","return_min","i","length","game","push","sum","j","play","percent","preferences2","map","name","index","color","luminosity","pref","list","percentage","title","propTypes","object","isRequired","mapStateToProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./PreferencesCard.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PieChart from 'react-minimal-pie-chart';\nimport randomColor from \"randomcolor\";\nclass PreferencesCard extends Component {\n  state = {};\n  render() {\n    \n    const attributes = this.props.attributes;\n    const games = attributes[\"game_choice\"] == null ? \"\" : attributes[\"game_choice\"];\n    const plays = attributes[\"game_minutes\"] == null ? \"\" : attributes[\"game_minutes\"];\n    \n    console.log(games, plays);\n    var return_game = [];\n    var return_time = [];\n    var return_min = [];\n\n    for (let i = 0; i < games.length; i++) {\n      var game = games[i];\n      return_game.push(\n        <li>\n         {game}\n        </li>\n      );\n    }\n    var sum=0;\nfor (let j=0; j< games.length; j++) {\nsum += plays[j]\n}\n\n    var play;\n    for (let j = 0; j < games.length; j++) {\n      var play = plays[j];\n      var percent = (play/sum)*100;\n      return_time.push(\n   percent\n      );\n      return_min.push(\n        play\n      );\n    }\n\n    \n    var preferences2 = return_game.map(function(name, index) {\n      var color = randomColor({luminosity: 'light'});\n      var pref = {};\n      pref[\"title\"] = name;\n      pref[\"value\"] = return_time[index];\n      pref[\"color\"] = color;\n      pref[\"time\"] = return_min[index];\n      return pref;\n      })\n      var list=[];\n      for (let i=0; i< preferences2.length; i++){\n       var pref= preferences2[i];\n       var percentage = pref[\"time\"];\n      list.push(<li className={\"legend\"} style={{\"background-color\":pref.color}}>{pref.title}<span className={\"percentage\"}>{percentage}</span></li>);\n      }\n    return (\n      <div className={\"div-body-prefrences\"}>\n       <Typography gutterBottom>Game Preferences</Typography>\n       <table className={\"gameTable\"}>\n         <tbody>\n           <tr><td className={\"piechart\"}><PieChart data={preferences2} /></td>\n           <td>\n             <ul>\n               <li className={\"subtitle\"}><span>Game Choice / Game Minutes </span></li>\n             {list}\n           </ul></td></tr>\n         </tbody>\n       </table>\n       \n\n      </div>\n    );\n  }\n}\nPreferencesCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(\n  mapStateToProps,\n null \n)(PreferencesCard);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}