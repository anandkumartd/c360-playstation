{"ast":null,"code":"var cookie = require('../vendor/js-cookies');\n\nvar _ = require('../utils/lodash');\n\nfunction findDomains(domain) {\n  var domainChunks = domain.split('.');\n  var domains = [];\n\n  for (var i = domainChunks.length - 1; i >= 0; i--) {\n    domains.push(domainChunks.slice(i).join('.'));\n  }\n\n  return domains;\n} // Set cookie on highest allowed domain\n\n\nmodule.exports = function setCookie(storage, name, value) {\n  var clone = _.assign({}, storage);\n\n  var is = {\n    ip: storage.domain.match(/\\d*\\.\\d*\\.\\d*\\.\\d*$/),\n    local: storage.domain === 'localhost',\n    custom: storage.customDomain\n  };\n  var expires = new Date();\n  expires.setSeconds(expires.getSeconds() + clone.expires); // When it's localhost, an IP, or custom domain, set the cookie directly\n\n  if (is.ip || is.local || is.custom) {\n    clone.domain = is.local ? null : clone.domain;\n    cookie.setItem(name, value, expires, clone.path, clone.domain);\n  } else {\n    // Otherwise iterate recursively on the domain until it gets set\n    // For example, if we have three sites:\n    // bar.foo.com, baz.foo.com, foo.com\n    // First it tries setting a cookie on .com, and it fails\n    // Then it sets the cookie on foo.com, and it'll pass\n    var domains = findDomains(storage.domain);\n    var ll = domains.length;\n    var i = 0; // Check cookie to see if it's \"undefined\".  If it is, remove it\n\n    if (!value) {\n      for (; i < ll; i++) {\n        cookie.removeItem(name, storage.path, domains[i]);\n      }\n    } else {\n      for (; i < ll; i++) {\n        clone.domain = domains[i];\n        cookie.setItem(name, value, expires, clone.path, clone.domain); // Break when cookies aren't being cleared and it gets set properly\n        // Don't break when value is falsy so all the cookies get cleared\n\n        if (cookie.getItem(name) === value) {\n          // When cookie is set succesfully, save used domain in storage object\n          storage.domain = clone.domain;\n          break;\n        }\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}