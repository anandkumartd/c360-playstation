{"ast":null,"code":"class Parser {\n  makeDictFromArrays(names, rows) {\n    var profiles_dict = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      var profile = {};\n\n      for (let j = 0; j < names.length; j++) {\n        profile[names[j]] = rows[i][j];\n      }\n\n      profiles_dict.push(profile);\n    }\n\n    return profiles_dict;\n  }\n\n  makeAttrFromArrays(data) {\n    var json = JSON.stringify(data);\n    var obj = JSON.parse(json);\n    var attribute = {};\n\n    for (let i = 0; i < obj.length; i++) {\n      var element_key = obj[i].name;\n      var element_value = obj[i].value;\n      attribute[element_key] = element_value;\n    }\n\n    return attribute;\n  }\n\n  makePredictFromArrays(data) {\n    var json = JSON.stringify(data);\n    var obj = JSON.parse(json);\n    var predict = {};\n\n    for (let i = 0; i < obj.length; i++) {\n      var element_key = obj[i].name;\n      var element_value = obj[i].value;\n      predict[element_key] = element_value;\n    }\n\n    return predict;\n  }\n\n  mapSearchFromArrays(key, values) {\n    var json = JSON.stringify(key);\n    var obj = JSON.parse(json);\n    var segments = obj[0].values;\n    var serachResult = {};\n\n    for (let i = 0; i < obj.length; i++) {\n      var element_key = obj[i].name;\n      var element_value = obj[i].value;\n      serachResult[element_key] = element_value;\n    }\n\n    return serachResult;\n  }\n\n}\n\nexport default Parser;","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/td-solution-engineering/c360-PlayStation/src/utils/parsers/Parser.js"],"names":["Parser","makeDictFromArrays","names","rows","profiles_dict","i","length","profile","j","push","makeAttrFromArrays","data","json","JSON","stringify","obj","parse","attribute","element_key","name","element_value","value","makePredictFromArrays","predict","mapSearchFromArrays","key","values","segments","serachResult"],"mappings":"AAAA,MAAMA,MAAN,CAAa;AACXC,EAAAA,kBAAkB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC9B,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIE,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACI,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,OAAO,CAACL,KAAK,CAACM,CAAD,CAAN,CAAP,GAAoBL,IAAI,CAACE,CAAD,CAAJ,CAAQG,CAAR,CAApB;AACD;;AACDJ,MAAAA,aAAa,CAACK,IAAd,CAAmBF,OAAnB;AACD;;AACD,WAAOH,aAAP;AACD;;AACDM,EAAAA,kBAAkB,CAACC,IAAD,EAAO;AACvB,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX;AACA,QAAII,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAWJ,IAAX,CAAV;AACA,QAAIK,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,GAAG,CAACT,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIa,WAAW,GAAGH,GAAG,CAACV,CAAD,CAAH,CAAOc,IAAzB;AACA,UAAIC,aAAa,GAAGL,GAAG,CAACV,CAAD,CAAH,CAAOgB,KAA3B;AACAJ,MAAAA,SAAS,CAACC,WAAD,CAAT,GAAyBE,aAAzB;AACD;;AACD,WAAOH,SAAP;AACD;;AACDK,EAAAA,qBAAqB,CAACX,IAAD,EAAO;AAC1B,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX;AACA,QAAII,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAWJ,IAAX,CAAV;AACA,QAAIW,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,GAAG,CAACT,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIa,WAAW,GAAGH,GAAG,CAACV,CAAD,CAAH,CAAOc,IAAzB;AACA,UAAIC,aAAa,GAAGL,GAAG,CAACV,CAAD,CAAH,CAAOgB,KAA3B;AACAE,MAAAA,OAAO,CAACL,WAAD,CAAP,GAAuBE,aAAvB;AACD;;AACD,WAAOG,OAAP;AACD;;AAEHC,EAAAA,mBAAmB,CAACC,GAAD,EAAKC,MAAL,EAAY;AAC9B,QAAKd,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeW,GAAf,CAAZ;AACA,QAAIV,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAWJ,IAAX,CAAV;AACA,QAAKe,QAAQ,GAAGZ,GAAG,CAAC,CAAD,CAAH,CAAOW,MAAvB;AACE,QAAIE,YAAY,GAAE,EAAlB;;AACF,SAAI,IAAIvB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,GAAG,CAACT,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAClC,UAAIa,WAAW,GAAGH,GAAG,CAACV,CAAD,CAAH,CAAOc,IAAzB;AACA,UAAIC,aAAa,GAAGL,GAAG,CAACV,CAAD,CAAH,CAAOgB,KAA3B;AACAO,MAAAA,YAAY,CAACV,WAAD,CAAZ,GAA4BE,aAA5B;AACD;;AACD,WAAOQ,YAAP;AACC;;AA9CY;;AAkDb,eAAe5B,MAAf","sourcesContent":["class Parser {\n  makeDictFromArrays(names, rows) {\n    var profiles_dict = [];\n    for (let i = 0; i < rows.length; i++) {\n      var profile = {};\n      for (let j = 0; j < names.length; j++) {\n        profile[names[j]] = rows[i][j];\n      }\n      profiles_dict.push(profile);\n    }\n    return profiles_dict;\n  }\n  makeAttrFromArrays(data) {\n    var json = JSON.stringify(data);\n    var obj = JSON.parse(json);\n    var attribute = {};\n    for (let i = 0; i < obj.length; i++) {\n      var element_key = obj[i].name;\n      var element_value = obj[i].value;\n      attribute[element_key] = element_value;\n    }\n    return attribute;\n  }\n  makePredictFromArrays(data) {\n    var json = JSON.stringify(data);\n    var obj = JSON.parse(json);\n    var predict = {};\n    for (let i = 0; i < obj.length; i++) {\n      var element_key = obj[i].name;\n      var element_value = obj[i].value;\n      predict[element_key] = element_value;\n    }\n    return predict;\n  }\n\nmapSearchFromArrays(key,values){\n var  json = JSON.stringify(key);\n var obj = JSON.parse(json);\n var  segments = obj[0].values;\n   var serachResult ={};\n for(let i = 0; i < obj.length; i++){\n  var element_key = obj[i].name;\n  var element_value = obj[i].value;\n  serachResult[element_key] = element_value;\n}\nreturn serachResult;\n}\n\n}\n\nexport default Parser;\n"]},"metadata":{},"sourceType":"module"}