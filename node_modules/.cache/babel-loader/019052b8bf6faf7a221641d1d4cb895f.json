{"ast":null,"code":"var isObjectLike = require('../internal/isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar numberTag = '[object Number]';\n/** Used for native method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objToString = objectProto.toString;\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(8.4);\n * // => true\n *\n * _.isNumber(NaN);\n * // => true\n *\n * _.isNumber('8.4');\n * // => false\n */\n\nfunction isNumber(value) {\n  return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag;\n}\n\nmodule.exports = isNumber;","map":null,"metadata":{},"sourceType":"script"}