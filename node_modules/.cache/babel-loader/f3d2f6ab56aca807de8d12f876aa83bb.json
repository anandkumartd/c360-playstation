{"ast":null,"code":"/*!\n  * domready (c) Dustin Diaz 2012 - License MIT\n  */\n!function (name, definition) {\n  if (typeof module != 'undefined') module.exports = definition();else if (typeof define == 'function' && typeof define.amd == 'object') define(definition);else this[name] = definition();\n}('domready', function (ready) {\n  var fns = [],\n      fn,\n      f = false,\n      doc = document,\n      testEl = doc.documentElement,\n      hack = testEl.doScroll,\n      domContentLoaded = 'DOMContentLoaded',\n      addEventListener = 'addEventListener',\n      onreadystatechange = 'onreadystatechange',\n      readyState = 'readyState',\n      loadedRgx = hack ? /^loaded|^c/ : /^loaded|c/,\n      loaded = loadedRgx.test(doc[readyState]);\n\n  function flush(f) {\n    loaded = 1;\n\n    while (f = fns.shift()) f();\n  }\n\n  doc[addEventListener] && doc[addEventListener](domContentLoaded, fn = function () {\n    doc.removeEventListener(domContentLoaded, fn, f);\n    flush();\n  }, f);\n  hack && doc.attachEvent(onreadystatechange, fn = function () {\n    if (/^c/.test(doc[readyState])) {\n      doc.detachEvent(onreadystatechange, fn);\n      flush();\n    }\n  });\n  return ready = hack ? function (fn) {\n    self != top ? loaded ? fn() : fns.push(fn) : function () {\n      try {\n        testEl.doScroll('left');\n      } catch (e) {\n        return setTimeout(function () {\n          ready(fn);\n        }, 50);\n      }\n\n      fn();\n    }();\n  } : function (fn) {\n    loaded ? fn() : fns.push(fn);\n  };\n});","map":null,"metadata":{},"sourceType":"script"}