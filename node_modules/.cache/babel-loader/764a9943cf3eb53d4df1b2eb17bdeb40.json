{"ast":null,"code":"var cachePush = require('./cachePush'),\n    getNative = require('./getNative');\n/** Native method references. */\n\n\nvar Set = getNative(global, 'Set');\n/* Native method references for those with the same name as other `lodash` methods. */\n\nvar nativeCreate = getNative(Object, 'create');\n/**\n *\n * Creates a cache object to store unique values.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\n\nfunction SetCache(values) {\n  var length = values ? values.length : 0;\n  this.data = {\n    'hash': nativeCreate(null),\n    'set': new Set()\n  };\n\n  while (length--) {\n    this.push(values[length]);\n  }\n} // Add functions to the `Set` cache.\n\n\nSetCache.prototype.push = cachePush;\nmodule.exports = SetCache;","map":null,"metadata":{},"sourceType":"script"}