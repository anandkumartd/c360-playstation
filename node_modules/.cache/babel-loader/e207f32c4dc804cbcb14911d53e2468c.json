{"ast":null,"code":"var _jsxFileName = \"/Users/anandkumar/Documents/github/c360-playstation/src/Components/ProfileDialog/HeatTable/HeatTableCard.js\";\nimport React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./HeatTableCard.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MUIDataTable from \"mui-datatables\";\nimport Paper from '@material-ui/core/Paper';\n\nclass HeatTableCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: []\n    };\n  }\n\n  componentDidMount() {\n    const profile = this.props.profile;\n    const attributes = this.props.attributes;\n    console.log(typeof profile);\n    var Kes = [];\n\n    for (let key of Object.keys(profile)) {\n      Kes.push(key);\n    }\n\n    console.log(Kes);\n    var Vals = [];\n\n    for (let value of Object.values(profile)) {\n      Vals.push(value);\n    }\n\n    console.log(Vals); //  for (let z = 0; z < Vals.length>0; z++){\n    //   var Val = Vals[z];\n    //   var Ke = Kes[z]\n    //   function createDots(Val) {\n    //     return { \n    //       ke:Val\n    //     };\n    //   }\n    //   var Dotsdata = createDots(Val);\n    //   Calarray.push(Dotsdata);\n    // }\n    //   Array.prototype.diff = function(Vals, Kes) {\n    //     for(var i in this) {   \n    //       var Val = Vals[i];\n    //       var Ke = Kes[i];\n    //       function createDots(Val,Ke) {\n    //        return { \n    //        ke:Val\n    //    };\n    //   }\n    //    var Dotsdata = createDots(Val,Ke);\n    // Calarray.push(Dotsdata);      \n    //     }\n    //   };\n\n    var Colsi = [];\n\n    for (let w = 0; w < Kes.length > 0; w++) {\n      var Ki = Kes[w];\n      var Vol = Vals[w];\n\n      function createCols(Kes) {\n        return {\n          name: Ki,\n          label: Ki,\n          options: {\n            filter: true,\n            sort: true\n          }\n        };\n      }\n\n      var Colsdata = createCols(Ki);\n      Colsi.push(Colsdata);\n    }\n\n    console.log(Colsi);\n    var Calarray = [];\n    var mobj = {};\n\n    for (var u = 0; u < Kes.length; u++) {\n      mobj[Kes[u]] = Vals[u];\n    }\n\n    Calarray.push(mobj);\n    console.log(\"CAL\" + Calarray);\n    const return_biz = profile[\"bus_name\"] == null ? \"\" : profile[\"bus_name\"];\n    const return_mail = profile[\"bus_email\"] == null ? \"\" : profile[\"bus_email\"];\n    const return_employees = profile[\"employees\"] == null ? \"\" : profile[\"employees\"];\n    const return_works = profile[\"work_emails\"] == null ? \"\" : profile[\"work_emails\"];\n    const return_camp = profile[\"email_campaign\"] == null ? \"\" : profile[\"email_campaign\"];\n    const return_service = profile[\"email_service\"] == null ? \"\" : profile[\"email_service\"];\n    const return_type = profile[\"email_type\"] == null ? \"\" : profile[\"email_type\"];\n    const return_stat = profile[\"email_status\"] == null ? \"\" : profile[\"email_status\"];\n    const return_date = profile[\"email_date\"] == null ? \"\" : profile[\"email_date\"];\n    var array_w = [];\n\n    for (let i = 0; i < return_works.length; i++) {\n      var work = return_works[i];\n      array_w.push(work);\n    }\n\n    console.log(array_w);\n    let array_b = [];\n\n    for (let j = 0; j < return_employees.length > 0; j++) {\n      var bizarray = return_employees[j];\n      array_b.push(bizarray);\n    }\n\n    console.log(array_b);\n    let array_i = [];\n\n    for (let k = 0; k < return_camp.length > 0; k++) {\n      var infoarray = return_camp[k];\n      array_i.push(infoarray);\n    }\n\n    console.log(array_i);\n    let array_s = [];\n\n    for (let b = 0; b < return_camp.length > 0; b++) {\n      var servarray = return_service[b];\n      array_s.push(servarray);\n    }\n\n    console.log(array_s);\n    let array_t = [];\n\n    for (let c = 0; c < return_type.length > 0; c++) {\n      var typarray = return_type[c];\n      array_t.push(typarray);\n    }\n\n    console.log(array_t);\n    let array_us = [];\n\n    for (let d = 0; d < return_stat.length > 0; d++) {\n      var usarray = return_stat[d];\n      array_us.push(usarray);\n    }\n\n    console.log(array_us);\n    let array_dat = [];\n\n    for (let e = 0; e < return_date.length > 0; e++) {\n      var darray = return_date[e];\n      array_dat.push(darray);\n    }\n\n    console.log(array_dat);\n    var pair = array_w.map(function (value, index) {\n      var myobj = {};\n      myobj[\"value\"] = value;\n      myobj[\"name\"] = array_b[index];\n      myobj[\"camp\"] = array_i[index];\n      myobj[\"serv\"] = array_s[index];\n      myobj[\"type\"] = array_t[index];\n      myobj[\"stat\"] = array_us[index];\n      myobj[\"date\"] = array_dat[index]; //myobj[\"info\"]= results[index];\n\n      return myobj;\n    }); //console.log('data:'+Coox);\n    //var coord = [Coox, Cooy, Cooz, CooA, CooB, CooC, CooD];\n    //console.log(coord);\n    //zoo.push(datooz);\n    //console.log('coordinate:'+JSON.stringify(coordinate));\n\n    var areaarray;\n    var durationarray;\n    var camparray;\n    var serarray;\n    var typearray;\n    var tasarray;\n    var infarray = [];\n    var rowarray = [];\n    var nameArray = [];\n    var mailArray = [];\n    var colArray = [];\n    var labelArray = [];\n    var colArray = [];\n\n    function createData(return_biz, return_mail, areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray) {\n      return {\n        return_biz,\n        return_mail,\n        areaarray,\n        durationarray,\n        camparray,\n        servarray,\n        typearray,\n        tasarray,\n        infarray\n      };\n    }\n\n    function makeData(areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray) {\n      return {\n        name: areaarray,\n        email: durationarray,\n        campaign: camparray,\n        service: servarray,\n        type: typearray,\n        status: tasarray,\n        date: infarray\n      };\n    }\n\n    var array = [];\n    var goolArray = [];\n    var finalarray = [];\n    var pair2;\n\n    for (let r = 0; r < pair.length; r++) {\n      var dat = pair[r];\n      var newArray = [];\n      areaarray = dat.name;\n      durationarray = dat.value;\n      camparray = dat.camp;\n      servarray = dat.serv;\n      typearray = dat.type;\n      tasarray = dat.stat;\n      infarray = dat.date;\n      var table_name = areaarray;\n      var table_mail = durationarray;\n      var ro = createData(return_biz, return_mail, areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray);\n      rowarray.push(ro);\n      var ko = makeData(areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray);\n      console.log(ko);\n      finalarray.push(ko);\n      array = Object.values(finalarray);\n    }\n\n    console.log(array);\n    console.log(JSON.stringify(finalarray));\n    var calarray = JSON.stringify(profile);\n    this.setState({\n      data: Calarray,\n      columns: Colsi,\n      rows: rowarray\n    });\n  }\n\n  render() {\n    const columns = this.state.columns;\n    const data = this.state.data; //[{name: \"Jean@Aramark.com\", company: \"Jean Mee\", city: \"CP4\", state: \"SFMC\"},\n    // {name: \"Freida@Manpower.com\", company: \"Freida McNirlin\", city: \"CP1\", state: \"Marketo\"},\n    //{name: \"Corena@Masco.com\", company: \"Corena Buffy\", city: \"CP7\", state: \"MailCimp\"}]\n\n    console.log(data);\n    const options = {\n      filterType: 'checkbox'\n    };\n    return React.createElement(\"div\", {\n      className: \"div-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"innercontainer AttList\",\n      style: {\n        display: \"block\",\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        maxHeight: 'auto',\n        overflowY: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(MUIDataTable, {\n      title: \"Attributes List\",\n      data: data,\n      columns: columns,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })));\n  } //}\n\n\n}\n\nHeatTableCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(mapStateToProps, null)(HeatTableCard);","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/c360-playstation/src/Components/ProfileDialog/HeatTable/HeatTableCard.js"],"names":["React","Component","Typography","connect","PropTypes","Table","TableBody","TableCell","TableHead","TableRow","MUIDataTable","Paper","HeatTableCard","state","rows","componentDidMount","profile","props","attributes","console","log","Kes","key","Object","keys","push","Vals","value","values","Colsi","w","length","Ki","Vol","createCols","name","label","options","filter","sort","Colsdata","Calarray","mobj","u","return_biz","return_mail","return_employees","return_works","return_camp","return_service","return_type","return_stat","return_date","array_w","i","work","array_b","j","bizarray","array_i","k","infoarray","array_s","b","servarray","array_t","c","typarray","array_us","d","usarray","array_dat","e","darray","pair","map","index","myobj","areaarray","durationarray","camparray","serarray","typearray","tasarray","infarray","rowarray","nameArray","mailArray","colArray","labelArray","createData","makeData","email","campaign","service","type","status","date","array","goolArray","finalarray","pair2","r","dat","newArray","camp","serv","stat","table_name","table_mail","ro","ko","JSON","stringify","calarray","setState","data","columns","render","filterType","display","overflow","maxHeight","overflowY","propTypes","object","isRequired","mapStateToProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./HeatTableCard.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MUIDataTable from \"mui-datatables\";\nimport Paper from '@material-ui/core/Paper';\n\n\nclass HeatTableCard extends Component {\n  state = {\nrows:[]\n  };\n  componentDidMount(){\n    const profile = this.props.profile;\n    const attributes = this.props.attributes;\n    console.log(typeof(profile));\n    var Kes =[];\n    for (let key of Object.keys(profile)) {\n      Kes.push(key);\n    }\n  console.log(Kes);\n   \n   var Vals =[];\n    for (let value of Object.values(profile)) {\n      Vals.push(value);\n    }\n\n   console.log(Vals);\n\n\n  \n   \n\n \n\n  //  for (let z = 0; z < Vals.length>0; z++){\n  //   var Val = Vals[z];\n  //   var Ke = Kes[z]\n  //   function createDots(Val) {\n  //     return { \n  //       ke:Val\n  //     };\n   \n  //   }\n  //   var Dotsdata = createDots(Val);\n  //   Calarray.push(Dotsdata);\n\n  // }\n\n//   Array.prototype.diff = function(Vals, Kes) {\n//     for(var i in this) {   \n//       var Val = Vals[i];\n//       var Ke = Kes[i];\n//       function createDots(Val,Ke) {\n//        return { \n//        ke:Val\n//    };\n//   }\n//    var Dotsdata = createDots(Val,Ke);\n// Calarray.push(Dotsdata);      \n\n//     }\n//   };\n\n\n   \n    var Colsi = [];\n    for (let w = 0; w < Kes.length>0; w++){\n      var Ki = Kes[w];\n      var Vol = Vals[w];\n      \n      function createCols(Kes) {\n        return { \n        name: Ki,\n        label:Ki,\n        options: {\n         filter: true,\n         sort: true,\n        }};\n        \n      }\n      \n      var Colsdata = createCols(Ki);\n\n      Colsi.push(Colsdata);\n\n\n    }\n    console.log(Colsi);\n    var Calarray=[];\n    var mobj = {};\n    for (var u = 0; u < Kes.length; u++){\n      mobj[Kes[u]] = Vals[u];\n  }\n   Calarray.push(mobj);\n   console.log(\"CAL\"+Calarray);\n    \n    \n    \n\n\n\n\n    const return_biz = profile[\"bus_name\"] == null\n        ? \"\"\n        : profile[\"bus_name\"];\n    const return_mail =  profile[\"bus_email\"] == null\n        ? \"\"\n        : profile[\"bus_email\"];\n    const return_employees =  profile[\"employees\"] == null\n        ? \"\"\n        : profile[\"employees\"];\n    const return_works =  profile[\"work_emails\"] == null\n        ? \"\"\n        : profile[\"work_emails\"];\n    const return_camp = profile[\"email_campaign\"] == null\n         ? \"\"\n        : profile[\"email_campaign\"];\n    const return_service = profile[\"email_service\"] == null\n        ? \"\"\n       : profile[\"email_service\"];\n    const return_type = profile[\"email_type\"] == null\n        ? \"\"\n       : profile[\"email_type\"];\n    const return_stat = profile[\"email_status\"] == null\n        ? \"\"\n       : profile[\"email_status\"];\n    const return_date = profile[\"email_date\"] == null\n        ? \"\"\n       : profile[\"email_date\"];\n\n\n       \n\n     \n    var array_w =[];\n      for (let i = 0; i < return_works.length; i++) {\n        var work = return_works[i];\n        array_w.push(work);\n      }\n      console.log(array_w);\n        \n        let array_b = [];\n        for (let j = 0; j < return_employees.length>0; j++) {\n          var bizarray = return_employees[j];\n          array_b.push(bizarray);\n         }\n        \n      console.log(array_b);\n  \n        let array_i =[]\n        for (let k = 0; k < return_camp.length>0; k++){\n          var infoarray = return_camp[k];\n          array_i.push(infoarray);\n        \n        }\n        console.log(array_i);\n     \n        let array_s =[]\n        for (let b = 0; b < return_camp.length>0; b++){\n          var servarray = return_service[b];\n          array_s.push(servarray);\n        \n        }\n        console.log(array_s);\n\n        let array_t =[]\n        for (let c = 0; c < return_type.length>0; c++){\n          var typarray = return_type[c];\n          array_t.push(typarray);\n        \n        }\n        console.log(array_t);\n\n        let array_us =[]\n        for (let d = 0; d < return_stat.length>0; d++){\n          var usarray = return_stat[d];\n          array_us.push(usarray);\n        \n        }\n        console.log(array_us);\n\n        let array_dat =[]\n        for (let e = 0; e < return_date.length>0; e++){\n          var darray = return_date[e];\n          array_dat.push(darray);\n        \n        }\n        console.log(array_dat);\n\n\nvar pair = array_w.map(function(value, index) {\n  var myobj = {};\nmyobj[\"value\"] = value;\nmyobj[\"name\"] = array_b[index];\nmyobj[\"camp\"] = array_i[index];\nmyobj[\"serv\"] = array_s[index];\nmyobj[\"type\"] = array_t[index];\nmyobj[\"stat\"] = array_us[index];\nmyobj[\"date\"] = array_dat[index];\n//myobj[\"info\"]= results[index];\n  return myobj;\n\n});\n\n\n\n\n//console.log('data:'+Coox);\n//var coord = [Coox, Cooy, Cooz, CooA, CooB, CooC, CooD];\n//console.log(coord);\n//zoo.push(datooz);\n//console.log('coordinate:'+JSON.stringify(coordinate));\n\n\n\nvar areaarray;\nvar durationarray;\nvar camparray;\nvar serarray;\nvar typearray;\nvar tasarray;\nvar infarray = [];\nvar rowarray = [];\nvar nameArray = [];\nvar mailArray = [];\nvar colArray = [];\nvar labelArray = [];\nvar colArray = [];\n\n\n\n\n\n\nfunction createData(return_biz, return_mail, areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray) {\n  return { return_biz, return_mail, areaarray, durationarray,  camparray, servarray, typearray, tasarray, infarray };\n}\n\nfunction makeData(areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray){\nreturn {name: areaarray, email: durationarray, campaign: camparray, service: servarray, type: typearray, status: tasarray, date: infarray};\n}\n\nvar array = [];\nvar goolArray=[];\nvar finalarray =[];\nvar pair2;\nfor (let r = 0; r < pair.length; r++) {\nvar dat = pair[r];\nvar newArray = [];\nareaarray  = dat.name;\ndurationarray = dat.value;\ncamparray =dat.camp;\nservarray = dat.serv;\ntypearray = dat.type;\ntasarray = dat.stat;\ninfarray = dat.date;\nvar table_name =  areaarray;\nvar table_mail = durationarray;\n\nvar ro = createData(return_biz, return_mail, areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray);\nrowarray.push(ro);\n\n\n\n\nvar ko = makeData(areaarray, durationarray, camparray, servarray, typearray, tasarray, infarray );\nconsole.log(ko)\nfinalarray.push(ko);\narray = Object.values(finalarray);\n}\n\nconsole.log(array);\nconsole.log(JSON.stringify(finalarray));\nvar calarray = JSON.stringify(profile);\nthis.setState({\ndata: Calarray,\ncolumns: Colsi,\nrows: rowarray\n\n}); \n\n  \n  }\n  render() {\n    const columns = this.state.columns;\n     const data = this.state.data;\n      //[{name: \"Jean@Aramark.com\", company: \"Jean Mee\", city: \"CP4\", state: \"SFMC\"},\n     // {name: \"Freida@Manpower.com\", company: \"Freida McNirlin\", city: \"CP1\", state: \"Marketo\"},\n      //{name: \"Corena@Masco.com\", company: \"Corena Buffy\", city: \"CP7\", state: \"MailCimp\"}]\n   \n  \n     console.log(data);\n     const options = {\n       filterType: 'checkbox',\n     };\n     \n     \n   \n      return (\n        \n        <div className=\"div-body\">\n        <div className=\"innercontainer AttList\" style={{display:\"block\", overflow:\"hidden\"}}>\n        <Paper style={{maxHeight:'auto', overflowY:'scroll'}} >\n       \n        </Paper>\n        \n        <MUIDataTable\n       title={\"Attributes List\"}\n       data={data}\n       columns={columns}\n       options={options}\n     />\n      \n        </div>\n      </div>\n      );\n    }\n\n   \n  //}\n}\nHeatTableCard.propTypes = {\n  attributes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  attributes: state.attributes.item\n});\n\nexport default connect(\n  mapStateToProps,\n null \n)(HeatTableCard);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}