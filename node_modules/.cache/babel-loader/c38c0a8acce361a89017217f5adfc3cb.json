{"ast":null,"code":"/**\n  Author: github.com/duian\n  Original Repo: https://github.com/duian/js-cookies\n**/\n\n/**\nThe MIT License (MIT)\n\nCopyright (c) 2016 zhou\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n**/\n\n/* eslint-disable no-useless-escape */\nvar encode = function encode(val) {\n  try {\n    return encodeURIComponent(val);\n  } catch (e) {\n    console.error('error encode %o');\n  }\n\n  return null;\n};\n\nvar decode = function decode(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    console.error('error decode %o');\n  }\n\n  return null;\n};\n\nvar handleSkey = function handleSkey(sKey) {\n  return encode(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&');\n};\n\nvar Cookies = {\n  getItem: function getItem(sKey) {\n    if (!sKey) {\n      return null;\n    }\n\n    return decode(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + handleSkey(sKey) + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null;\n  },\n  setItem: function setItem(sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\n      return false;\n    }\n\n    var sExpires = '';\n\n    if (vEnd) {\n      switch (vEnd.constructor) {\n        case Number:\n          if (vEnd === Infinity) {\n            sExpires = '; expires=Fri, 31 Dec 9999 23:59:59 GMT';\n          } else {\n            sExpires = '; max-age=' + vEnd;\n          }\n\n          break;\n\n        case String:\n          sExpires = '; expires=' + vEnd;\n          break;\n\n        case Date:\n          sExpires = '; expires=' + vEnd.toUTCString();\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    document.cookie = [encode(sKey), '=', encode(sValue), sExpires, sDomain ? '; domain=' + sDomain : '', sPath ? '; path=' + sPath : '', bSecure ? '; secure' : ''].join('');\n    return true;\n  },\n  removeItem: function removeItem(sKey, sPath, sDomain) {\n    if (!this.hasItem(sKey)) {\n      return false;\n    }\n\n    document.cookie = [encode(sKey), '=; expires=Thu, 01 Jan 1970 00:00:00 GMT', sDomain ? '; domain=' + sDomain : '', sPath ? '; path=' + sPath : ''].join('');\n    return true;\n  },\n  hasItem: function hasItem(sKey) {\n    if (!sKey) {\n      return false;\n    }\n\n    return new RegExp('(?:^|;\\\\s*)' + encode(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=').test(document.cookie);\n  },\n  keys: function keys() {\n    var aKeys = document.cookie.replace(/((?:^|\\s*;)[^=]+)(?=;|$)|^\\s*|\\s*(?:=[^;]*)?(?:\\1|$)/g, '').split(/\\s*(?:=[^;]*)?;\\s*/);\n    aKeys = aKeys.map(function (key) {\n      return decode(key);\n    });\n    return aKeys;\n  }\n};\nmodule.exports = Cookies;","map":null,"metadata":{},"sourceType":"script"}